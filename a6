% query: analogy(1, (1,5), (3,X), R). analogy(set_number,(A,B),(C,X),relationship)
% other: analogy(2, (5,6), (7,X), R).

% middle(X, Y) = X is in the middle of Y
% data for set 1
% figure(S, NO, D) = S - set number, NO - figure number, D - Description
figure(1, 1, middle(triangle, square)).
figure(1, 2, middle(circle, triangle)).
figure(1, 3, middle(square, circle)).
figure(1, 4, middle(square, square)).
figure(1, 5, middle(square, triangle)).
figure(1, 6, middle(triangle, circle)).
figure(1, 7, middle(circle, square)).
figure(1, 8, middle(triangle, triangle)).

% data for set 2
figure(2, 1, middle(circle, circle)).
figure(2, 2, topleft(circle, circle)).
figure(2, 3, botright(circle, circle)).
figure(2, 4, middle(square, square)).
figure(2, 5, topleft(square, square)).
figure(2, 6, topright(square, square)).
figure(2, 7, botright(square, square)).
figure(2, 8, botleft(square,square)).

relate(middle(F1, F2), middle(F2, F1), invert).

relate(middle(F1, F2), middle(F1, F2), vertical_mirror).
relate(topleft(F1, F2), topright(F1, F2), vertical_mirror).
relate(botleft(F1, F2), botright(F1, F2), vertical_mirror).
relate(botright(F1, F2), botleft(F1, F2), vertical_mirror).
relate(topright(F1, F2), topleft(F1, F2), vertical_mirror).

relate(middle(F1, F2), middle(F1, F2), horizontal_mirror).
relate(topleft(F1, F2), botleft(F1, F2), horizontal_mirror).
relate(botleft(F1, F2), topleft(F1, F2), horizontal_mirror).
relate(botright(F1, F2), topright(F1, F2), horizontal_mirror).
relate(topright(F1, F2), botright(F1, F2), horizontal_mirror).

analogy(S, (A,B), (C,X), R) :-
  figure(S, A, DA),
  figure(S, B, DB),
  figure(S, C, DC),
  figure(S, X, DX),
  relate(DA, DB, R),
  relate(DC, DX, R).
